<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:local="clr-namespace:ConciseDesign.WPF"
    xmlns:customControls="clr-namespace:ConciseDesign.WPF.CustomControls"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors">

    <Style TargetType="{x:Type customControls:CircularProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:CircularProgressBar}">
                    <Grid>

                        <customControls:CircularProgress Stroke="{TemplateBinding Background}"
                                                         StrokeThickness="{TemplateBinding Thickness}"
                                                         Value="100" />
                        <customControls:CircularProgress Stroke="{TemplateBinding Foreground}"
                                                         StrokeThickness="{TemplateBinding Thickness}"
                                                         Value="{TemplateBinding PercentageValue}" />
                        
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
    </Style>

    <Style TargetType="{x:Type customControls:ActiveBackButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:ActiveBackButton}">
                    <Border x:Name="BackBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter ContentSource="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="BackBorder"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=MouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="BackBorder"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=MouseOverBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type customControls:SearchBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:SearchBox}">
                    <Border BorderBrush="LightGray"
                            BorderThickness="1">
                        <Grid x:Name="sp"
                              Height="{TemplateBinding Height}"
                              Width="{TemplateBinding Width}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="textBox"
                                     VerticalContentAlignment="Center"
                                     BorderThickness="0"
                                     FontSize="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FontSize}"
                                     FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FontFamily}"
                                     Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SearchString,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="TextChanged"
                                                    SourceName="textBox">
                                        <b:InvokeCommandAction
                                            Command="{Binding RelativeSource={RelativeSource TemplatedParent},Path=TextChangedCommand}" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </TextBox>
                            <Border x:Name="clearbtn"
                                    Grid.Column="0"
                                    Width="{TemplateBinding ActualHeight}"
                                    HorizontalAlignment="Right"
                                    Visibility="Visible">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="#4AFF0000" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Image Source="/ConciseDesign.WPF;component/ImageResources/Close-24.png"
                                       Margin="5"
                                       Opacity="0.5" />
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="MouseDown">
                                        <b:CallMethodAction TargetObject="{Binding ElementName=textBox}"
                                                            MethodName="Clear" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </Border>
                            <Button x:Name="bd"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ActualHeight}"
                                    Command="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SearchPressCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent},Path=CommandParameter}"
                                    Grid.Column="1">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Background"
                                                Value="Gainsboro" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="DodgerBlue" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <ContentControl
                                    Content="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SearchButtonIcon}" />
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=textBox,Path=Text.Length}"
                                     Value="0">
                            <Setter Property="Visibility"
                                    TargetName="clearbtn"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height"
                Value="34" />
        <Setter Property="Width"
                Value="160" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="SearchButtonIcon">
            <Setter.Value>
                <Image Source="/ConciseDesign.WPF;component/ImageResources/Search-Find-48.png"
                       Stretch="Uniform" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- custom -->

    <Style TargetType="{x:Type customControls:SelectBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:SelectBox}">
                    <Grid>
                        <TextBlock x:Name="HeadTextBlock"
                                   Text="{TemplateBinding HeaderText}"
                                   FontSize="12"
                                   Foreground="White"
                                   Visibility="Collapsed"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,20,0" />
                        <ToggleButton x:Name="toggle"
                                      Content="{TemplateBinding SelectedValue}"
                                      IsChecked="{Binding IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                      BorderThickness="0">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid Background="Transparent"
                                          x:Name="header">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Name="HeaderText"
                                                   Text="{TemplateBinding Content}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Foreground="White"
                                                   FontSize="13" />
                                        <Image x:Name="ico"
                                               Grid.Column="1"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               RenderOptions.BitmapScalingMode="HighQuality"
                                               Source="/ConciseDesign.WPF;component/ImageResources/Arrowhead-Down-01-32.png"
                                               Stretch="Uniform" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked"
                                                 Value="True">
                                            <Setter TargetName="ico"
                                                    Property="Source"
                                                    Value="/ConciseDesign.WPF;component/ImageResources/ArrowUP.png" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <Popup
                            IsOpen="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource PopupSite}">
                            <StackPanel Background="White"
                                        Width="{Binding ElementName=toggle,Path=ActualWidth}">
                                <ItemsPresenter />
                            </StackPanel>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedItem"
                                 Value="{x:Null}">
                            <Setter TargetName="HeadTextBlock"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type customControls:ColorTip}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:ColorTip}">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse Width="{TemplateBinding TipRadius}"
                                 Height="{TemplateBinding TipRadius}"
                                 Fill="{TemplateBinding TipBrush}" />
                        <TextBlock Text="{TemplateBinding Text}"
                                   Margin="5,0,0,0" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type customControls:ConciseButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:ConciseButton}">
                    <Border Background="{TemplateBinding Background}"
                            Effect="{TemplateBinding Effect}"
                            Margin="{TemplateBinding Margin}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            OpacityMask="{TemplateBinding OpacityMask}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>