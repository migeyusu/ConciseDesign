<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:customControls="clr-namespace:ConciseDesign.WPF.CustomControls"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseDefination.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <ControlTemplate TargetType="{x:Type ToggleButton}"
                     x:Key="BaseToggleButton">
        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="true"
                Effect="{TemplateBinding Effect}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="BaseToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template"
                Value="{StaticResource BaseToggleButton}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!--#region buttons-->
    
    <!--基本按鈕template-->
    <ControlTemplate x:Key="BaseButtonTemplate"
                     TargetType="{x:Type Button}">
        <Border Background="{TemplateBinding Background}"
                Effect="{TemplateBinding Effect}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                OpacityMask="{TemplateBinding OpacityMask}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="ContainerButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template"
                Value="{StaticResource BaseButtonTemplate}" />
        <Setter Property="BorderThickness"
                Value="0"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="Background"
                Value="Transparent"/>
    </Style>

    <!--特定透明图片按钮-->
    <Style x:Key="TransparentButton"
           BasedOn="{StaticResource ContainerButtonStyle}"
           TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource BlockBase}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--功能显示按钮-->
    <Style x:Key="FunctionButtonStyle"
           BasedOn="{StaticResource ContainerButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{StaticResource BlockBase}"/>
        <Setter Property="Height"
                Value="65"/>
        <Setter Property="Margin"
                Value="0.5"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource BlockCover}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--最小化 -->
    <Style x:Key="MinimumButtonW"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Setter Property="Padding"
                Value="5"/>
        <Setter Property="Content">
            <Setter.Value>
                <iconPacks:PackIconMaterial Kind="WindowMinimize" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--关闭 -->
    <Style TargetType="{x:Type Button}"
           x:Key="CloseButtonW"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <iconPacks:PackIconMaterial Kind="Close" />
            </Setter.Value>
        </Setter>
        <Setter Property="Padding"
                Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource AlarmColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CoverImageButton"
           BasedOn="{StaticResource ContainerButtonStyle}"
           TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        <Rectangle Fill="{StaticResource BlockCover}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5"
                                          ShadowDepth="0" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="FlatFunctionButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Setter Property="Foreground"
                Value="White"/>
        <!--<Setter Property="FontSize"
                Value="15" />-->
        <!--<Setter Property="Width"
                Value="80" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0"
                                  BlurRadius="10"
                                  Color="#0DF5F5F5" />
            </Setter.Value>
        </Setter>-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource BlockBase}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="FlatTextButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Setter Property="Width"
                Value="100"/>
        <Setter Property="Height"
                Value="30"/>
        <Setter Property="Foreground"
                Value="White"/>
        <Setter Property="Background"
                Value="{DynamicResource PrimaryHueMidBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource PrimaryHueLightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource PrimaryHueDarkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="CancelFlatButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Setter Property="Width"
                Value="100"/>
        <Setter Property="Height"
                Value="30"/>
        <Setter Property="Foreground"
                Value="Black"/>
        <Setter Property="Background"
                Value="White"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="LightGray" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="DarkGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CornerConciseButton"
           TargetType="{x:Type customControls:ConciseButton}">
        <Setter Property="CornerRadius"
                Value="2"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="Background"
                Value="DodgerBlue"/>
        <Setter Property="Foreground"
                Value="White" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="3"
                                          ShadowDepth="1"
                                          Color="DimGray"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type Button}"
           x:Key="TextButton"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Setter Property="Background"
                Value="{StaticResource BlockBase}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource BlockCover}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="InnerTextButton"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource BlockCover}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}"
           x:Key="DialogButton"
           BasedOn="{StaticResource InnerTextButton}">
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="13" />
    </Style>

    <!--通用文字按钮-->
    <Style x:Key="MainWinTextButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource BlockBase}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource BlockCover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<ControlTemplate TargetType="{x:Type Button}"
                     x:Key="WinImgBtn">
        <Border x:Name="self">
            <Rectangle Fill="{TemplateBinding Background}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="self"
                        Property="Background"
                        Value="{StaticResource BlockBase}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->

    <!--win10按钮-->
    <Style TargetType="{x:Type Button}"
           x:Key="Win10TextButton"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Setter Property="Background"
                Value="LightGray"/>
        <Setter Property="BorderBrush"
                Value="Gray" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="BorderThickness"
                        Value="2"/>
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--蓝色底色，移入后变红-->

    <Style TargetType="{x:Type Button}"
           x:Key="BlueBlockImgButton"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource AlarmColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--通用透明掩码按钮-->
    <Style x:Key="MaskImageButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource AlarmColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--通用透明图片按钮-->

    <Style x:Key="FlatImageButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ContainerButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource PrimaryHueMidBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="FloatCircleButton"
                     TargetType="{x:Type Button}">
        <Grid>
            <Ellipse x:Name="backEllipse"
                     Fill="{TemplateBinding Background}">
                <Ellipse.Effect>
                    <DropShadowEffect BlurRadius="3"
                                      ShadowDepth="0"
                                      Color="DimGray" />
                </Ellipse.Effect>
            </Ellipse>
            <Ellipse x:Name="innerRect"
                     Fill="{TemplateBinding Foreground}"
                     RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Effect"
                        TargetName="backEllipse">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" 
                                          ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                       Storyboard.TargetName="innerRect">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                  Value="90" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                       Storyboard.TargetName="innerRect">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                  Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#endregion-->


</ResourceDictionary>