<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:customControls="clr-namespace:ConciseDesign.WPF.CustomControls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Buttons.xaml" />
        <ResourceDictionary Source="BaseDefination.xaml" />
        <ResourceDictionary Source="ContentControl.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--菜单按钮项-->
    <RoutedUICommand x:Key="SubmitPre"
                     Text="提交当前" />
    <RoutedUICommand x:Key="Clear"
                     Text="清空所有项" />
    <!--已选择item-->
    <ControlTemplate x:Key="SelectedSwitchMenuItem"
                     TargetType="{x:Type ListBoxItem}">
        <Border x:Name="item"
                Background="#D13A1D"
                Margin="1,0"
                Width="{TemplateBinding Width}">
            <TextBlock Text="{TemplateBinding Content}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Foreground="White" />
        </Border>
    </ControlTemplate>
    <!--未选择item行为-->
    <ControlTemplate x:Key="UnSelectedSwitchMenuItem"
                     TargetType="{x:Type ListBoxItem}">
        <Border x:Name="item"
                Background="#FF1C2125"
                Width="{TemplateBinding Width}"
                Margin="1,0">
            <TextBlock Text="{TemplateBinding Content}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Foreground="White" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource BlockCover}"
                        TargetName="item" />

            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--页内切换菜单-->
    <Style x:Key="LayersSwitchMenu"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Width"
                Value="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ListBox},Converter={StaticResource MenuAutoWidthConverter}}" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Template"
                        Value="{StaticResource ResourceKey=SelectedSwitchMenuItem}" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="False">
                <Setter Property="Template"
                        Value="{StaticResource ResourceKey=UnSelectedSwitchMenuItem}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--扁平化样式-->
    <ControlTemplate x:Key="FlatComboBox"
                     TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton Content="{TemplateBinding Text}"
                          IsChecked="{Binding IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="White"
                              x:Name="header">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding ElementName=header,Path=TemplatedParent.Content}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                            <iconPacks:PackIconMaterial Kind="ArrowDown"
                                                        x:Name="ico"
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Center"
                                                        Width="20" />
                            <GridSplitter Grid.Column="0"
                                          Width="2"
                                          Height="23"
                                          Background="LightGray"
                                          IsEnabled="False" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="ico"
                                        Property="Kind"
                                        Value="ArrowUp" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <Popup IsOpen="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                   Style="{StaticResource PopupSite}"
                   Height="200">
                <StackPanel>
                    <ItemsPresenter />
                </StackPanel>
            </Popup>
        </Grid>
    </ControlTemplate>


    <ControlTemplate TargetType="{x:Type ToggleButton}"
                     x:Key="ImageToggleButton">
        <Border x:Name="img">
            <Rectangle Fill="{TemplateBinding Background}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource PrimaryHueMidBrush}"
                        TargetName="img" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource PrimaryHueLightBrush}"
                        TargetName="img" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="XComboboxTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton Content="{TemplateBinding Text}"
                          IsChecked="{Binding IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                          FontSize="{TemplateBinding FontSize}"
                          BorderThickness="0"
                          x:Name="toggle">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="Transparent"
                              x:Name="header">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="2"
                                    Background="White"
                                    CornerRadius="3">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="1"
                                                      ShadowDepth="0" />
                                </Border.Effect>
                            </Border>
                            <TextBlock Grid.Column="0"
                                       x:Name="HeaderText"
                                       Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Content}"
                                       HorizontalAlignment="Left"
                                       Padding="10,0,0,0"
                                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                                       SnapsToDevicePixels="True"
                                       VerticalAlignment="Center"
                                       Foreground="Black"
                                       FontSize="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FontSize}" />
                            <iconPacks:PackIconMaterial x:Name="ico"
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Kind="ChevronDown" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="ico"
                                        Property="Kind"
                                        Value="ChevronUp" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <Popup IsOpen="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                   Style="{StaticResource PopupSite}">
                <StackPanel Background="White"
                            Width="{Binding ElementName=toggle,Path=ActualWidth}">
                    <ItemsPresenter />
                </StackPanel>
            </Popup>
        </Grid>
    </ControlTemplate>

    <Style x:Key="MemberComboboxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Width"
                Value="140" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Template"
                Value="{StaticResource XComboboxTemplate}" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="2"
                                  ShadowDepth="0" />
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxItem"
                     TargetType="{x:Type ComboBoxItem}">
        <Border x:Name="ComboboxItem"
                Background="White"
                BorderThickness="0,1">
            <TextBlock HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Padding="10,0,0,0"
                       Foreground="DarkGray"
                       Text="{TemplateBinding Content}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#FFF95656"
                        TargetName="ComboboxItem" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GenComboboxItem"
                     TargetType="ComboBoxItem">
        <Border Height="{TemplateBinding Height}"
                BorderThickness="1,0,1,1"
                Background="White"
                BorderBrush="LightGray"
                x:Name="bd">
            <ContentPresenter VerticalAlignment="Center"
                              Margin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Padding}"
                              HorizontalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent},Path=HorizontalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#FFF95656"
                        TargetName="bd" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="StraightComboboxItem"
                     TargetType="ComboBoxItem">
        <Border Height="{TemplateBinding Height}"
                BorderThickness="1,0,1,1"
                Background="White"
                BorderBrush="LightGray"
                x:Name="bd">
            <TextBlock Text="{Binding}"
                       VerticalAlignment="Center"
                       Margin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Padding}"
                       FontSize="{Binding RelativeSource={RelativeSource TemplatedParent},Path=FontSize}"
                       Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Foreground}"
                       HorizontalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent},Path=HorizontalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#FFF95656"
                        TargetName="bd" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBoxItem}"
           x:Key="MemberComboBoxItemStyle">
        <Setter Property="Template"
                Value="{StaticResource StraightComboboxItem}" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="Padding"
                Value="10,0,0,0" />
        <Setter Property="Foreground"
                Value="DimGray" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}"
           x:Key="GenMenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="bd">
                        <TextBlock Text="{TemplateBinding Content}"
                                   Margin="10,5,0,5" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource PrimaryHueLightBrush}"
                                    TargetName="bd" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}"
           x:Key="ComboboxButtonItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock Text="{TemplateBinding Content}"
                               Margin="10,5,0,5" />
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource Mouselectback}"
                                    TargetName="bd" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--combobox类型，因为菜单按下后会自动收起-->
    <ControlTemplate TargetType="{x:Type ComboBox}"
                     x:Key="GenMenu">
        <Grid>
            <ToggleButton Content="{TemplateBinding Text}"
                          x:Name="btn"
                          IsChecked="{Binding IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                          Template="{StaticResource ImageToggleButton}" />
            <Popup IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay,Path=IsDropDownOpen}"
                   PlacementTarget="{Binding ElementName=btn}"
                   Style="{StaticResource PopupSite}"
                   x:Name="content">
                <Grid Margin="10">
                    <Border Background="White"
                            Effect="{StaticResource GenDropShadowEffect}" />
                    <StackPanel>
                        <ItemsPresenter />
                    </StackPanel>
                </Grid>

            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="ToggleButton.Checked"
                          SourceName="btn">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                       Storyboard.TargetName="content">
                            <EasingDoubleKeyFrame KeyTime="0"
                                                  Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                                  Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>